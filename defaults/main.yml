# TODO: Escaping double curly braces in Ansible https://stackoverflow.com/questions/32279519/escaping-double-curly-braces-in-ansible

versions:
  asdf: v0.9.0
  gcloud: 375.0.0
  golang: 1.17.8
  grafana: 9.1.3
  kubectl: v1.26.0
  nodejs: 17.6.0
  python: 3.10.0
  ruby: 3.1.0
  rust: 1.59.0
  stew: v0.3.0
  terraform: 1.1.8
  packer: 1.8.0
  php: 8.0.2

tag: []
output: ""
# ROLE COMPONENT
role_component:
  # pip:
  #   virtualenv: ""
  backup: true
  render_dir: "{{ playbook_dir }}/component_rendered_tasks"
  yaml_with_includes: true
  force_restart:  false
  ignore_errors:  true
  user:   "{{ ansible_user }}"
  group:  "{{ ansible_user }}"
  mode:   644
  run:    systemd

  components: []

  dummy:
    name: "Dummy component - used for testing"
    install:
      # become: false
      packages:
        - git
    configs:
      templates:
        - name: dummy
          template: dummy.yaml
          dest: ~/.config/dummy.yaml
          # group: staff
          variables:
            foo: bar

  git:
    name: git
    install:
      packages:
        - git
    configs:
      templates:
        - name: gitconfig
          template: "gitconfig"
          dest: "~/.gitconfig"
          variables:
            aliases:
              - p = push
              - st = status -sb
              - ll = log --oneline
              - last = log -1 HEAD --stat
              - cm = commit -m
              - rv = remote -v
              - d = diff
              - dv = difftool -t vimdiff -y
              - gl = config --global -l
              - se = !git rev-list --all | xargs git grep -F

  alacritty:
    name: "Alacritty - GPU Terminal"
    install:
      pre:
        - name: "[alacritty] deps"
          package:
            name: "{{'{{'}} item {{'}}'}}"
            state: present
          loop:
            - cmake
            - cargo
          become: true
      post:
        - name: "[alacritty] cargo install"
          shell: cargo install alacritty
    configs:
      templates:
        - name: alacritty
          template: alacritty.yml
          dest: "~/.config/alacritty/alacritty.yml"
          variables:
            font_size: 10.0

  asdf:
    name: "ASDF - Manage multiple runtime versions with a single CLI tool"
    install:
      pre:
        - name: "[asdf] system deps"
          # https://github.com/pyenv/pyenv/wiki#suggested-build-environment
          package:
            name: "{{'{{'}} item {{'}}'}}"
            state: present
          loop:
            - autoconf
            - bison
            - build-essential
            - curl
            - gettext
            - git
            - libbz2-dev
            - libcurl4-openssl-dev
            - libedit-dev
            - libffi-dev
            - libgd-dev
            - libicu-dev
            - libjpeg-dev
            - liblzma-dev
            - libmysqlclient-dev
            - libncursesw5-dev
            - libonig-dev
            - libpng-dev
            - libpq-dev
            - libreadline-dev
            - libsqlite3-dev
            - libssl-dev
            - libxml2-dev
            - libxmlsec1-dev
            - libzip-dev
            - llvm
            - make
            - openssl
            - pkg-config
            - re2c
            - tk-dev
            - unzip
            - wget
            - xz-utils
            - zlib1g-dev
          become: true
        - name: "[asdf] install via git"
          git:
            repo: https://github.com/asdf-vm/asdf.git
            dest: ~/.asdf
            version: "{{'{{'}} versions.asdf {{'}}'}}"
    configs:
      pre:
        - name: "[asdf] install repos"
          shell: |
            asdf plugin add {{'{{'}} item {{'}}'}} || echo "Already added?"
          environment:
            PATH: "{{'{{'}} ansible_env.HOME {{'}}'}}/.asdf/bin:{{'{{'}} ansible_env.PATH {{'}}'}}"
          loop:
            - "ruby https://github.com/asdf-vm/asdf-ruby.git"
            - "nodejs https://github.com/asdf-vm/asdf-nodejs.git"
            - "python https://github.com/danhper/asdf-python"
            - "golang https://github.com/kennyp/asdf-golang.git"
            - "gcloud https://github.com/jthegedus/asdf-gcloud"
            - "php https://github.com/asdf-community/asdf-php.git"
            - "rust https://github.com/asdf-community/asdf-rust.git"
            - "packer https://github.com/asdf-community/asdf-hashicorp.git"
            - "terraform https://github.com/asdf-community/asdf-hashicorp.git"
        - name: "[asdf] install plugins"
          # TODO: set version
          shell: |
            asdf install {{'{{'}} item {{'}}'}}
            asdf global  {{'{{'}} item {{'}}'}}
          environment:
            PATH: "{{'{{'}} ansible_env.HOME {{'}}'}}/.asdf/bin:{{ ansible_env.HOME }}/.asdf/shims:{{ ansible_env.PATH }}:{{'{{'}} ansible_env.PATH {{'}}'}}"
          loop:
            - "ruby   {{'{{'}} versions.ruby {{'}}'}}"
            - "nodejs {{'{{'}} versions.nodejs {{'}}'}}"
            - "python {{'{{'}} versions.python {{'}}'}}"
            - "golang {{'{{'}} versions.golang {{'}}'}}"
            - "gcloud {{'{{'}} versions.gcloud {{'}}'}}"
            - "php    {{'{{'}} versions.gcloud {{'}}'}}"
            - "rust   {{'{{'}} versions.rust   {{'}}'}}"
            - "packer {{'{{'}} versions.packer {{'}}'}}"
            - "terraform {{'{{'}} versions.terraform {{'}}'}}"

  zsh:
    # TODO: --ignore-deps for molecule testing
    deps:
      - git
    install:
      packages:
        - git
        - zsh
      pre:
        - name: "ZSH Installing oh-my-zsh"
          git:
            repo: https://github.com/robbyrussell/oh-my-zsh
            dest: ~/.oh-my-zsh
            depth: 1
            force: true
        - name: "ZSH Change default shell"
          become: true
          user:
            name: "{{ '{{' }} ansible_user {{ '}}' }}"
            shell: /usr/bin/zsh
          ignore_errors: true
        - name: "ZSH Change plugins"
          git:
            repo: "{{ '{{' }} item.repo  {{ '}}' }}"
            dest: "~/.oh-my-zsh/custom/plugins/{{ '{{' }} item.plugin {{ '}}' }}"
            depth: 1
          loop:
            - plugin: zsh-autosuggestions
              repo: https://github.com/zsh-users/zsh-autosuggestions
            - plugin: zsh-syntax-highlighting
              repo: https://github.com/zsh-users/zsh-syntax-highlighting
            - plugin: zsh-kubectl-prompt
              repo: https://github.com/superbrothers/zsh-kubectl-prompt.git
            - repo: https://github.com/bilelmoussaoui/flatpak-zsh-completion
              plugin: flatpak

    configs:
      templates:
        - name: zsh_theme
          template: zsh_theme
          dest: ~/.oh-my-zsh/themes/dnull.zsh-theme
          variables:
            ps_colors:
              sirius: blue
              antares: cyan
              mira: red
              prima: red
              naos: green
              wezen: green
              vega: yellow
              rigel: yellow
              altair: magenta
              capella: magenta
              deneb: magenta
              other: white
        - name: zshrc
          template: zshrc
          dest: ~/.zsrch
          variables:
            startx: true
            zsh_theme: dnull # agnoster
            plugins:
              - git
              - kubectl
              - zsh-autosuggestions
              - zsh-syntax-highlighting
              - zsh-kubectl-prompt
              - asdf
              - flatpak
            local_vars:
              # - VENV=py3
              - GPG_TTY=$(tty)

            exports:
              - DEBFULLNAME="Bohdan Sukhomlinov"
              - DEBEMAIL="shellshock.dnull@gmail.com"
              - DISABLE_UPDATE_PROMPT=true
              - EDITOR=lvim
              - GPG_TTY
              - HISTTIMEFORMAT="%d/%m/%y %T "
              - HOSTALIASES=~/.hosts
              - LANG=en_US.UTF-8
              - LC_ALL=en_US.UTF-8
              - PASSWORD_STORE_CLIP_TIME=180
              - PATH="$PATH:/snap/bin"
              - PATH="$PATH:$HOME/bin"
              - PATH="$PATH:$HOME/go/bin"
              - PATH="$PATH:$HOME/.local/bin"
              - PATH="$PATH:$HOME/.stew/bin"
              - PATH="$PATH:$HOME/install/flutter/bin"
              # - PATH="$PATH:$HOME/ENV/${VENV}/bin"
              - PATH="$PATH:$HOME/dNull/ues.lib"
              - PATH="$PATH:$HOME/dNull/ues.utils"
              - PATH="$PATH:$HOME/dNull/dnull"
              - PATH="$PATH:$HOME/.pulumi/bin"
              - PATH="$PATH:$HOME/.pub-cache/bin"
              - SHELL=/usr/bin/zsh
              - SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
              - VAGRANT_HOME='~/.vagrant.d'
              - UES_LIB=~/dNull/ues.lib
              - KUBECONFIG="${HOME}/.kube/config"
              - HOSTALIASES=~/.hosts
              - RPROMPT='%{$fg[blue]%}($ZSH_KUBECTL_PROMPT)%{$reset_color%}'

            scripts:
              - ~/bin/disable_wacom_touch.sh

            bind_keys:
              - bindkey '^ ' autosuggest-accept

            aliases:
              # - kubectl='minikube kubectl --'
              - vi='lvim'
              - clock='tty-clock -C 4 -b -x -n'
              - c='xclip'
              - digs='dig +short'
              - display_off='xset dpms force off'
              # - ekeys='vi ~/.config/sxhkd/sxhkdrc'
              # - ekitty='vi ~/.config/kitty/kitty.conf'
              - f='ranger'
              - g_pass='pwgen 15 | head -n1 | cut -d " " -f1 | c'
              - get_ip='wget -qO- https://ipecho.net/plain ; echo'
              - k='kubectl'
              - p='ping i.ua'
              - s='systemctl'
              - tf='terraform'
              # - venv_2='source ~/ENV/2/bin/activate'
              # - venv_3='source ~/ENV/py3/bin/activate'
              - music='spt'
              - ask='tuxi'
              - altair='TERM=xterm-color ssh altair'
              - mira='TERM=xterm-color ssh mira'
              - prima='TERM=xterm-color ssh prima'
              - antares='TERM=xterm-color ssh antares'
              - capella='TERM=xterm-color ssh capella'
              - deneb='TERM=xterm-color ssh deneb'
              - naos='TERM=xterm-color ssh naos'
              - rigel='TERM=xterm-color ssh rigel'
              - sirius='TERM=xterm-color ssh sirius'
              - vega='TERM=xterm-color ssh vega'
              - wezen='TERM=xterm-color ssh wezen'
            sources:
              # - ~/ENV/${VENV}/bin/activate
              - ~/dNull/secrets/secrets.sh || echo -e "[.!]\tNo secrets found!"
            vault: []
            evals:
              - direnv hook zsh
              - kubectl completion zsh
            misc:
              - unalias gr
    run:
      init: none

  stew:
    name: "Stew - An independent package manager for compiled binaries"
    install:
      pre:
        # - stat: path="~/.stew"
        #   register: stew_dir
        - name: "[stew] dir"
          file:
            path: ~/.stew/bin
            state: directory
        - name: "[stew] install binary"
          # TODO: install on arm
          get_url:
            url: https://github.com/marwanhawari/stew/releases/download/{{ versions.stew }}/stew-linux-amd64
            dest: ~/.stew/bin/stew
            mode: 0755
    # configs:
    #   templates:
    #     - name: stew
    #       template:
    #       variables:
    #         apps:
    #           - 'argoproj/argo-rollouts@v1.2.0-rc2'
    #           - 'junegunn/fzf@0.29.0'
    #           - 'git-time-metric/gtm@v1.3.5'
    #           - 'BurntSushi/ripgrep@13.0.0'
